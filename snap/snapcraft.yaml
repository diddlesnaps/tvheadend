name: tvheadend
adopt-info: tvheadend
summary: TV streaming server supporting DVB, ATSC, IPTV, and SAT>IP
description: >
  Tvheadend is a TV streaming server and digital video recorder supporting
  DVB-S, DVB-S2, DVB-C, DVB-C2, DVB-T, DVB-T2, ATSC, IPTV, SAT>IP and other
  formats. It can also stream and record from HDHomeRun devices.

  Once installed use your web browser to navigate to http://<IP-Address>:9981/.
  You can use 127.0.0.1 for the IP Address if your browser and Tvheadend are
  on the same computer. You can change the listening port and IP with
  `snap set tvheadend tvh-http-port=9981` and
  `snap set tvheadend tvh-ip=0.0.0.0`. You can also change the port for HTSP
  streaming connections with `snap set tvheadend tvh-htsp-port=9982`.

  Tvheadend is *not* listening on IPv6 by default. To enable IPv6 support, run
  `snap set tvh-enable-ipv6=true`

  OSCam's web interface is listening on port 8888 by default. You can change
  this by editing the file returned by `tvheadend.oscam-config`. e.g.
  `sudo $EDITOR $(tvheadend.oscam-config)`. This is an ini-style file where the
  web interface IP Address and Port are configured as below:

  ```ini
  [global]
  serverip =

  [webif]
  httpport =
  ```

  See [the OSCam configuration reference](http://www.streamboard.tv/wiki/OSCam/en/Config/oscam.conf)
  for details on the accepted options for the configuration file.

confinement: strict
grade: stable
base: core20

architectures:
  - build-on: i386
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64

layout:
  /usr/share/xmltv:
    bind: $SNAP/usr/share/xmltv
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/perl:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/perl
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/perl5:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/perl5
  /usr/share/perl:
    bind: $SNAP/usr/share/perl
  /usr/share/perl5:
    bind: $SNAP/usr/share/perl5

environment:
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  LD_LIBRARY_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/vdpau:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/lib

apps:
  tvheadend:
    command: bin/tvheadend-launch
    daemon: simple
    plugs:
      - avahi-control
      - dvb
      - network
      - network-bind
      - removable-media

  tvheadend-webui:
    command: bin/tvheadend-webui
    desktop: usr/share/applications/tvheadend.desktop
    plugs:
      - desktop

  reset-permissions:
    command: bin/reset-permissions

  oscam:
    command: usr/local/bin/oscam -c $SNAP_DATA -t $TMPDIR -u
    daemon: simple
    plugs:
      - dvb
      - network
      - network-bind
      - removable-media

  oscam-webui:
    command: bin/oscam-webui
    desktop: usr/share/applications/oscam.desktop
    plugs:
      - desktop

  oscam-config:
    command: bin/get-oscam-conf

parts:
  icons:
    plugin: dump
    source: icons

  scripts:
    plugin: dump
    source: scripts

  desktop-files:
    plugin: dump
    source: desktop-files

  patches:
    plugin: dump
    source: patches
    prime: [-*]

  vc4-libs:
    after: [patches]
    source: https://github.com/raspberrypi/userland.git
    source-depth: 1
    plugin: nil
    override-build: |
      if [ "$SNAPCRAFT_TARGET_ARCH" != "armhf" ] && [ "$SNAPCRAFT_TARGET_ARCH" != "arm64" ]; then
        exit 0
      fi
      # git apply $SNAPCRAFT_STAGE/vc-libs-neon.patch
      if [ "$SNAPCRAFT_TARGET_ARCH" = "arm64" ]; then
        ./buildme --aarch64 .
      else
        ./buildme .
      fi
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr
      cp -av ./build/raspberry/release/opt/vc/lib $SNAPCRAFT_PART_INSTALL/usr/
      cp -av ./build/raspberry/release/opt/vc/include $SNAPCRAFT_PART_INSTALL/usr/
    build-packages:
      - cmake
      - g++

  libusb:
    plugin: autotools
    source: https://github.com/libusb/libusb/releases/download/v1.0.22/libusb-1.0.22.tar.bz2
    autotools-configure-parameters:
      - --prefix=/usr
    build-packages:
      - libudev-dev
    stage-packages:
      - libudev1

  oscam:
    after: [libusb]
    plugin: make
    source: http://www.streamboard.tv/svn/oscam/trunk/
    source-type: svn
    override-build: |
      MAKEOPTS="USE_LIBUSB=1 USE_PCSC=1 USE_UTF8=1 NO_PLUS_TARGET=1"
      MAKEOPTS="$MAKEOPTS OSCAM_BIN='$SNAPCRAFT_PART_INSTALL/usr/local/bin/oscam' BINDIR='$SNAPCRAFT_PART_INSTALL/usr/local/bin'"
      MAKEOPTS="$MAKEOPTS EXTRA_CFLAGS='-I$SNAPCRAFT_STAGE/usr/include/libusb-1.0' EXTRA_LDFLAGS='-L$SNAPCRAFT_STAGE/usr/lib'"
      mkdir -p "$SNAPCRAFT_PART_INSTALL/usr/local/bin"
      make $MAKEOPTS allyesconfig
      make $MAKEOPTS -j$SNAPCRAFT_PARALLEL_BUILD_COUNT pcsc-libusb
    build-packages:
      - libpcsclite-dev
      - libssl-dev
    stage-packages:
      - libpcsclite1
      - libssl1.1

  tvheadend:
    after: [vc4-libs]
    plugin: make
    source: https://github.com/tvheadend/tvheadend.git
    source-branch: release/4.2
    organize:
      snap/tvheadend/current/usr: usr
    override-pull: |
      snapcraftctl pull
      last_committed_tag="$(git describe --tags --abbrev=0)"
      last_released_tag="$(snap info $SNAPCRAFT_PROJECT_NAME | awk '$1 == "beta:" { print $2 }')"
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
        snapcraftctl set-version "$(echo "${last_committed_tag}" | sed -E -e "s!^($SNAPCRAFT_PROJECT_NAME-?|v(ersion)?[/-]?)!!i")"
      else
        snapcraftctl set-version "$(git rev-parse --short HEAD)"
      fi
      patch -Np1 -i $SNAPCRAFT_STAGE/hdhomerun.patch
    override-build: |
      CONFIGFLAGS="--arch=$SNAPCRAFT_TARGET_ARCH \
        --prefix=/snap/tvheadend/current/usr \
        --disable-pcloud_cache \
        --enable-avahi \
        --enable-bundle \
        --enable-capmt \
        --enable-cccam \
        --enable-constcw \
        --enable-cwc \
        --enable-dvbcsa \
        --enable-dvbscan \
        --enable-hdhomerun_client \
        --enable-iptv \
        --enable-libav \
        --enable-libfdkaac \
        --enable-libopus \
        --enable-libtheora \
        --enable-libvorbis \
        --enable-libvpx \
        --enable-libx264 \
        --enable-libx265 \
        --enable-linuxdvb \
        --enable-linuxdvb_ca \
        --enable-linuxdvbapi \
        --enable-nvenc \
        --enable-pcre2 \
        --enable-pngquant \
        --enable-qsv \
        --enable-satip_client \
        --enable-satip_server \
        --enable-tsfile \
        --enable-tvhcsa \
        --enable-upnp \
        --enable-uriparser \
        --enable-vaapi \
        --enable-zlib \
      "
      if [ "$SNAPCRAFT_TARGET_ARCH" = "armhf" ] || [ "$SNAPCRAFT_TARGET_ARCH" = "arm64" ]; then
        CONFIGFLAGS="$CONFIGFLAGS \
          --enable-omx \
          --enable-omx_rpi \
        "
      fi

      # disable specific warnings
      CONFIGFLAGS="$CONFIGFLAGS --nowerror=unused-variable,stringop-truncation,attributes"

      ./configure $CONFIGFLAGS
      snapcraftctl build
    build-packages:
      - bzip2
      - cmake
      - dvb-apps
      - gettext
      - libavahi-client-dev
      - libavcodec-dev
      - libavfilter-dev
      - libavformat-dev
      - libavresample-dev
      - libavutil-dev
      - libc6-dev
      - libdvbcsa-dev
      - libffmpeg-nvenc-dev
      - libhdhomerun-dev
      - libimagequant-dev
      - libopus-dev
      - libpcre2-dev
      - libssl-dev
      - libswresample3
      - libswscale-dev
      - libtool-bin
      - liburiparser-dev
      - libva-dev
      - libvpx-dev
      - libx264-dev
      - libx265-dev
      - pngquant
      - python-is-python3
      - python3
      - python3-distutils
      - python3-requests
      - wget
      - xmltv-util
      - zlib1g-dev
      - on armhf:
        - libomxil-bellagio-dev
      - on arm64:
        - libomxil-bellagio-dev
    stage-packages:
      - bzip2
      - dvb-apps
      - ffmpeg
      - freeglut3
      - libaom0
      - libasound2
      - libass9
      - libavahi-client3
      - libavcodec58
      - libavfilter7
      - libavformat58
      - libavresample4
      - libavutil56
      - libbluray2
      - libbs2b0
      - libcairo-gobject2
      - libcairo2
      - libchromaprint1
      - libcodec2-0.9
      - libdatrie1
      - libdvbcsa1
      - libfftw3-double3
      - libflite1
      - libfontconfig1
      - libfreetype6
      - libfribidi0
      - libgdk-pixbuf2.0-0
      - libglu1-mesa
      - libgme0
      - libgomp1
      - libgraphite2-3
      - libgsm1
      - libharfbuzz0b
      - libhdhomerun4
      - libicu66
      - liblilv-0-0
      - libmp3lame0
      - libmpg123-0
      - libmysofa1
      - libnorm1
      - libnuma1
      - libogg0
      - libopenjp2-7
      - libopenmpt0
      - libopus0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libpcre2-8-0
      - libpcre2-16-0
      - libpcre2-32-0
      - libpcre2-posix2
      - libpgm-5.2-0
      - libpixman-1-0
      - libpostproc55
      - librsvg2-2
      - librubberband2
      - libsamplerate0
      - libserd-0-0
      - libshine3
      - libsnappy1v5
      - libsodium23
      - libsord-0-0
      - libsoxr0
      - libspeex1
      - libsratom-0-0
      - libssh-gcrypt-4
      - libswresample3
      - libswscale5
      - libthai0
      - libtheora0
      - libtwolame0
      - liburiparser1
      - libva-drm2
      - libva-x11-2
      - libva2
      - libvdpau1
      - libvidstab1.1
      - libvorbis0a
      - libvorbisenc2
      - libvorbisfile3
      - libvpx6
      - libwavpack1
      - libwebp6
      - libwebpmux3
      - libx264-155
      - libx265-179
      - libxcb-render0
      - libxcb-shm0
      - libxml2
      - libxrender1
      - libxvidcore4
      - libzmq5
      - ocl-icd-libopencl1
      - pngquant
      - xmltv-util
      - zlib1g
      - try:
        - va-driver-all
        - vdpau-va-driver
